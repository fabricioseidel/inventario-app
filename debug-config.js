// debug-config.js
// Configuraci√≥n para debug de errores comunes

console.log('üîç DIAGN√ìSTICO DE ERRORES EXPO');
console.log('====================================');

// Verificar configuraci√≥n del proyecto
console.log('üì± Configuraci√≥n del proyecto:');

// Leer package.json
const fs = require('fs');
const path = require('path');

try {
  const packagePath = path.join(__dirname, 'package.json');
  const packageJson = JSON.parse(fs.readFileSync(packagePath, 'utf8'));
  
  console.log('‚úÖ Nombre:', packageJson.name);
  console.log('‚úÖ Versi√≥n:', packageJson.version);
  console.log('‚úÖ Main:', packageJson.main);
  console.log('‚úÖ Expo SDK:', packageJson.dependencies?.expo || 'No encontrado');
  
} catch (e) {
  console.log('‚ùå Error leyendo package.json:', e.message);
}

// Verificar app.json
try {
  const appPath = path.join(__dirname, 'app.json');
  const appJson = JSON.parse(fs.readFileSync(appPath, 'utf8'));
  
  console.log('\nüì± Configuraci√≥n Expo:');
  console.log('‚úÖ Nombre:', appJson.expo?.name);
  console.log('‚úÖ Slug:', appJson.expo?.slug);
  console.log('‚úÖ Versi√≥n:', appJson.expo?.version);
  console.log('‚úÖ SDK Version:', appJson.expo?.sdkVersion);
  console.log('‚úÖ Platforms:', appJson.expo?.platforms);
  
} catch (e) {
  console.log('‚ùå Error leyendo app.json:', e.message);
}

// Verificar archivos principales
console.log('\nüìÅ Archivos principales:');
const mainFiles = ['App.js', 'index.js', 'metro.config.js'];
mainFiles.forEach(file => {
  try {
    if (fs.existsSync(path.join(__dirname, file))) {
      console.log(`‚úÖ ${file} existe`);
    } else {
      console.log(`‚ùå ${file} NO existe`);
    }
  } catch (e) {
    console.log(`‚ùå Error verificando ${file}:`, e.message);
  }
});

// Verificar estructura src/
console.log('\nüìÇ Estructura src/:');
const srcPath = path.join(__dirname, 'src');
if (fs.existsSync(srcPath)) {
  try {
    const srcContents = fs.readdirSync(srcPath);
    console.log('‚úÖ Carpeta src/ contiene:', srcContents.join(', '));
  } catch (e) {
    console.log('‚ùå Error leyendo src/:', e.message);
  }
} else {
  console.log('‚ùå Carpeta src/ no existe');
}

console.log('\n====================================');
console.log('üîç DIAGN√ìSTICO COMPLETADO');
console.log('====================================');

// Errores comunes y soluciones
console.log('\nüö® ERRORES COMUNES Y SOLUCIONES:');
console.log('');
console.log('1. "Unable to resolve module":');
console.log('   Soluci√≥n: npm install && npx expo r -c');
console.log('');
console.log('2. "Network request failed":');
console.log('   Soluci√≥n: Verificar conexi√≥n WiFi/datos');
console.log('');
console.log('3. "Something went wrong":');
console.log('   Soluci√≥n: npx expo start --tunnel --clear');
console.log('');
console.log('4. "Metro bundler issues":');
console.log('   Soluci√≥n: npx expo start --reset-cache');
console.log('');
console.log('5. "Expo Go version mismatch":');
console.log('   Soluci√≥n: Actualizar Expo Go en la tienda');
console.log('');
console.log('====================================');